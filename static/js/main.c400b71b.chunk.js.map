{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","selectedTodoId","className","map","todo","classnames","id","completed","title","type","onClick","TodoFilter","query","setQuery","filter","setFilter","name","onChange","e","target","value","ALL","ACTIVE","COMPLETED","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","closeModal","useState","user","setUser","useEffect","userId","selectedUser","href","email","App","setTodos","setSelectedTodo","setSelectedTodoId","visibleTodos","filteredTodos","lowerCasedQuery","toLowerCase","includes","filterTodos","data","foundTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c400b71b.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classnames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (id: number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo: Todo) => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classnames({\n                'has-background-info-light': selectedTodoId === todo.id,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    todo.completed ? 'has-text-success' : 'has-text-danger'\n                  }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={selectedTodoId === todo.id\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  filter: string,\n  setFilter: React.Dispatch<React.SetStateAction<Filter>>,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    query,\n    setQuery,\n    filter,\n    setFilter,\n  },\n) => {\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"filter\"\n            onChange={(e) => setFilter(e.target.value as Filter)}\n            value={filter}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          name=\"query\"\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length !== 0\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => clearQuery()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  closeModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedTodo,\n    closeModal,\n  },\n) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(selectedUser => setUser(selectedUser));\n  }, []);\n\n  const {\n    id,\n    title,\n    completed,\n  } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport { Todo } from './types/Todo';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/Filter';\n\nconst filterTodos = (todos: Todo[], query: string, filter: string) => {\n  let filteredTodos = [...todos];\n  const lowerCasedQuery = query.toLowerCase();\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(\n      (todo) => todo.title.toLowerCase().includes(lowerCasedQuery),\n    );\n  }\n\n  switch (filter) {\n    case Filter.ALL:\n      return filteredTodos;\n    case Filter.ACTIVE:\n      return filteredTodos.filter((todo) => !todo.completed);\n    case Filter.COMPLETED:\n      return filteredTodos.filter((todo) => todo.completed);\n    default:\n      return filteredTodos;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Filter.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const visibleTodos = filterTodos(todos, query, filter);\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => setTodos(data));\n  }, []);\n\n  const findSelectedTodo = (id: number): void => {\n    const foundTodo = visibleTodos.find(todo => id === todo.id);\n\n    setSelectedTodoId(id);\n    setSelectedTodo(foundTodo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectTodo={findSelectedTodo}\n                  selectedTodoId={selectedTodoId}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && selectedTodoId !== 0 && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          closeModal={() => setSelectedTodoId(0)}\n        />\n      ) }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}